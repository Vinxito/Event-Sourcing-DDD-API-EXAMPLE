version: '3.7'
services:

  event_sourcing_ddd_api:
    container_name: event_sourcing_ddd_api
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8087:8080"
    volumes:
      - .:/app:delegated
    env_file:
      - .env
    tty: true
    depends_on:
      - kafka
      - mongodb
      - elasticsearch

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=zookeeper

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=127.0.0.1
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:4.4.2
    container_name: mongodb
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: dummy
      MONGO_INITDB_ROOT_PASSWORD: dummy

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - "ELASTIC_PASSWORD=dummy"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - "discovery.type=single-node"
      - "http.port=9200"
      - "http.cors.enabled=true"
      - "http.cors.allow-origin=http://localhost:1358,http://127.0.0.1:1358"
      - "http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"
      - "http.cors.allow-credentials=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "./data:/usr/share/elasticsearch/data:rw"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.0
    container_name: kibana
    environment:
      - "ELASTIC_PASSWORD=dummy"
    ports: [ '5601:5601' ]
    depends_on:
      - 'elasticsearch'
